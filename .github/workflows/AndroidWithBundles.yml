name: Build for Android with Adressables Content

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Create Dev Build? (true/false)'
        required: true
        default: 'false'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildWithLinux:
    name: Build for Android on version 2020.3.47f1
    runs-on: ubuntu-latest
    env:
      ADDRESSABLES_CONTENT_BUILD_PATH: ${{ format('{0}/ServerData/Android', github.workspace) }}
    steps:
      # start notification
      - name: Start notification
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#8b9b9c"
          username: "DarkLord CI Bot"
          message: |
            Android Build started by ðŸ‘¤ ${{ github.actor }}
            Event `${{ github.event_name }}`
      # Checkout          
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true    
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android
          restore-keys: Library-
      # - name: Free Disk Space
      #   run: |
      #     df -h
      #     sudo swapoff -a
      #     sudo rm -rf /swapfile /usr/share/dotnet /usr/local/share/boost $AGENT_TOOLSDIRECTORY /usr/local/lib/android /opt/ghc
      #     sudo apt clean
      #     docker rmi $(docker image ls -aq)
      #     df -h
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Build Unity Project
        uses: game-ci/unity-builder@v2
        with:
          unityVersion: 2020.3.47f1
          targetPlatform: Android
          buildMethod: Ampersand.Editor.BuildGoAndDesign.Build # Addressable content build is triggered by the build method
          versioning: Semantic
          customParameters: -devBuild ${{ github.event.inputs.build_type }} -branch ${{ steps.extract_branch.outputs.branch }}
      # Output (player)
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-Android
          path: build/Android
      # Output (addressable content state)
      - name: Upload Addressable Content State data file
        uses: actions/upload-artifact@v2
        with:
          name: addressables_Android
          path: ${{ env.ADDRESSABLES_CONTENT_BUILD_PATH }}
      # Finish notification
      - name: Finish notification
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#8b9b9c"
          username: "DarkLord CI Bot"
          message: |
            Android Build finished by ðŸ‘¤ ${{ github.actor }}
            Event `${{ github.event_name }}` 
            Branch ${{ steps.extract_branch.outputs.branch }}

